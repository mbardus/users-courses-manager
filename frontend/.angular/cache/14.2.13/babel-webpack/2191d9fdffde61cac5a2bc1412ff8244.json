{"ast":null,"code":"import { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/user.service\";\nimport * as i2 from \"../services/course.service\";\nimport * as i3 from \"../services/enrollment.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\n\nfunction EnrollmentsComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r4.username);\n  }\n}\n\nfunction EnrollmentsComponent_option_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const course_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", course_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(course_r5.title);\n  }\n}\n\nfunction EnrollmentsComponent_tr_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const enrollment_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(enrollment_r6.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(enrollment_r6.courseTitle);\n  }\n}\n\nexport let EnrollmentsComponent = /*#__PURE__*/(() => {\n  class EnrollmentsComponent {\n    constructor(userService, courseService, enrollmentService) {\n      this.userService = userService;\n      this.courseService = courseService;\n      this.enrollmentService = enrollmentService;\n      this.users = [];\n      this.courses = [];\n      this.enrollments = [];\n      this.selectedUserId = '';\n      this.selectedCourseId = '';\n    }\n\n    ngOnInit() {\n      this.loadUsers();\n      this.loadCourses();\n    }\n\n    loadUsers() {\n      this.userService.getAllUsers().subscribe(data => this.users = data);\n    }\n\n    loadCourses() {\n      this.courseService.getCourses().subscribe(data => this.courses = data);\n    }\n\n    loadInitialData() {\n      // forkJoin esegue tutte le chiamate in parallelo e attende che tutte siano completate\n      forkJoin({\n        users: this.userService.getAllUsers(),\n        courses: this.courseService.getCourses(),\n        enrollments: this.enrollmentService.getEnrollments() // Aggiungiamo il metodo al service\n\n      }).subscribe(({\n        users,\n        courses,\n        enrollments\n      }) => {\n        this.users = users;\n        this.courses = courses;\n        this.buildEnrollmentView(enrollments, users, courses);\n      });\n    } // Costruisce la vista arricchita per la tabella delle iscrizioni\n\n\n    buildEnrollmentView(enrollments, users, courses) {\n      this.enrollments = enrollments.map(enrollment => {\n        const user = users.find(u => u.id === enrollment.userId);\n        const course = courses.find(c => c.id === enrollment.courseId);\n        return {\n          id: enrollment.id,\n          username: user ? user.username : 'N/A',\n          //userSurname: user ? user.surname : 'N/A',\n          courseTitle: course ? course.title : 'N/A'\n        };\n      });\n    }\n\n    enrollUser(form) {\n      if (form.invalid) {\n        return;\n      }\n\n      const enrollment = {\n        userId: this.selectedUserId,\n        courseId: this.selectedCourseId\n      };\n      this.enrollmentService.enrollUser(enrollment).subscribe(() => {\n        alert('Utente iscritto con successo!');\n        form.resetForm();\n        this.loadInitialData(); // Ricarica i dati per aggiornare la tabella\n      });\n    }\n\n  }\n\n  EnrollmentsComponent.ɵfac = function EnrollmentsComponent_Factory(t) {\n    return new (t || EnrollmentsComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.CourseService), i0.ɵɵdirectiveInject(i3.EnrollmentService));\n  };\n\n  EnrollmentsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EnrollmentsComponent,\n    selectors: [[\"app-enrollments\"]],\n    decls: 33,\n    vars: 6,\n    consts: [[1, \"container-fluid\"], [1, \"card\", \"mb-3\", 3, \"ngSubmit\"], [\"enrollmentForm\", \"ngForm\"], [1, \"card-body\"], [1, \"form-group\"], [\"for\", \"user\"], [\"id\", \"user\", \"name\", \"user\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\", \"disabled\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"course\"], [\"id\", \"course\", \"name\", \"course\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"mt-4\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function EnrollmentsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Iscrivi Utente a un Corso\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1, 2);\n        i0.ɵɵlistener(\"ngSubmit\", function EnrollmentsComponent_Template_form_ngSubmit_3_listener() {\n          i0.ɵɵrestoreView(_r7);\n\n          const _r0 = i0.ɵɵreference(4);\n\n          return i0.ɵɵresetView(ctx.enrollUser(_r0));\n        });\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Seleziona Utente\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"select\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function EnrollmentsComponent_Template_select_ngModelChange_9_listener($event) {\n          return ctx.selectedUserId = $event;\n        });\n        i0.ɵɵelementStart(10, \"option\", 7);\n        i0.ɵɵtext(11, \"-- Scegli un utente --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, EnrollmentsComponent_option_12_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 4)(14, \"label\", 9);\n        i0.ɵɵtext(15, \"Seleziona Corso\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function EnrollmentsComponent_Template_select_ngModelChange_16_listener($event) {\n          return ctx.selectedCourseId = $event;\n        });\n        i0.ɵɵelementStart(17, \"option\", 7);\n        i0.ɵɵtext(18, \"-- Scegli un corso --\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, EnrollmentsComponent_option_19_Template, 2, 2, \"option\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵtext(21, \"Iscrivi\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(22, \"h3\", 12);\n        i0.ɵɵtext(23, \"Lista Iscrizioni\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"table\", 13)(25, \"thead\")(26, \"tr\")(27, \"th\");\n        i0.ɵɵtext(28, \"Nome Studente\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"th\");\n        i0.ɵɵtext(30, \"Corso\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(31, \"tbody\");\n        i0.ɵɵtemplate(32, EnrollmentsComponent_tr_32_Template, 5, 2, \"tr\", 14);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(4);\n\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedUserId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedCourseId);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.courses);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.enrollments);\n      }\n    },\n    dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm]\n  });\n  return EnrollmentsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}